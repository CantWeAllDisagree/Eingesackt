plugins {
    alias libs.plugins.loom
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

repositories {
    maven {
        name = "Ladysnake Libs"
        url = "https://ladysnake.jfrog.io/artifactory/mods"
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name = "Jitpack"
        url = "https://jitpack.io"
    }
    maven { url "https://www.cursemaven.com" }
    maven { url "https://server.bbkr.space/artifactory/libs-release" }
    maven { url 'https://maven.draylar.dev/releases' }
    maven { url "https://maven.misterpemodder.com/libs-release/"}
    maven { url "https://maven.shedaniel.me/" }

}

dependencies {
    minecraft libs.minecraft
    mappings variantOf(libs.yarn) { classifier 'v2' }
    modImplementation libs.fabricloader
    modImplementation libs.fabric
    // config
    modImplementation include("dev.draylar.omega-config:omega-config-gui:${project.omega_config_version}"){exclude(group: "net.fabricmc.fabric-api")}
    modImplementation include("dev.draylar.omega-config:omega-config-base:${project.omega_config_version}"){exclude(group: "net.fabricmc.fabric-api")}
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")exclude(group: "net.fabricmc.fabric-api")
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}")exclude(group: "net.fabricmc.fabric-api")
    // trinkets
    modCompileOnly ("dev.emi:trinkets:${project.trinkets_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }
    // Shulker Box Tooltip
    modCompileOnly modRuntimeOnly("com.misterpemodder:shulkerboxtooltip-fabric:${project.shulker_box_tooltip_version}") {
        exclude group: "io.github.prospector"
        exclude group: "me.shedaniel.cloth"
        exclude group: "net.fabricmc.fabric-api"
    }
    // ModMenu
    modCompileOnly modRuntimeOnly("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }
        modRuntimeOnly ("com.terraformersmc:modmenu:${project.mod_menu_version}")
    //LibZ
    modCompileOnly include('com.github.Globox1997:LibZ:a007413402'){
        exclude group: "net.fabricmc.fabric-api"}

    modCompileOnly include ("io.github.cottonmc:LibGui:6.4.0+1.19")
    }

processResources {
    inputs.property "version", version
    inputs.property "minecraft_version", libs.minecraft
    inputs.property "loader_version", libs.fabricloader
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": version,
                "minecraft_version": libs.minecraft,
                "loader_version": libs.fabricloader
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {}
    repositories {}
}
